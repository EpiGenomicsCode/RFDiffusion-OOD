#!/bin/bash
[[ $(type -t module) == "function" ]] && export -f module

export WORKINGDIR="<%= context.working_directory %>"
export BC_EMAIL_ON_STARTED="<%= context.bc_email_on_started %>"
export SESSION_TYPE="<%= context.session_type %>"
export CREATED_AT="<%= session.created_at %>"

source "rfdiffusion_env.sh"

mkdir -p "${WORKINGDIR}" "${INPUT_DIR}" "${STRUCT}"

<% if context.bc_email_on_started == "1" %>
# Add all emails if checked
scontrol update jobid=$SLURM_JOBID MailType=ALL
<% end %>
    
<%- if context.session_type == "RFdiffusion" -%>

# RFdiffusion
export PDB_FILE="${INPUT_DIR}/input.pdb"

# Handle input based on design mode
<% if context.design_mode == 'unconditional' %>
echo '<%= context.protein_sequence %>' > "${PDB_FILE}"
<% else %>
cp "<%= context.pdb_structure.path %>" "${PDB_FILE}"
<% end %>

echo "Starting RFdiffusion process"
source ./rfdiffusion.sh "${PDB_FILE}" "$WORKINGDIR" "<%= context.auto_accounts %>" "$STATUS_FILE"

# Set parameters from form context
export NUM_DESIGNS=<%= context.num_designs %>
export TIMESTEPS=<%= context.timesteps %>
export DESIGN_MODE="<%= context.design_mode %>"

# Set diffusion parameters based on design mode
<%- case context.design_mode -%>
<%- when 'binder' -%>
export DIFFUSION_PARAMS="binder.protein_binder=True"
<%- when 'scaffold' -%> 
export DIFFUSION_PARAMS="scaffoldguided.scaffoldguided=True"
<%- when 'partial' -%>
export DIFFUSION_PARAMS="partial_diffusion.partial_T=$((<%= context.timesteps %>/2))"
<%- when 'symmetric' -%>
export DIFFUSION_PARAMS="symmetry.symmetry_type=<%= context.symmetry_type %>"
<%- else -%>
export DIFFUSION_PARAMS="contigmap.contigs=[100-100]"
<%- end -%>


<%- end -%>
